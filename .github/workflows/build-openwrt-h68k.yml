name: 🚀 编译 openwrt(Build openwrt)

on:
  workflow_dispatch:
    inputs:
      owner:
        description: "openWRT 仓库的拥有者 (Owner of openWRT repo)"
        type: string
        required: true
        default: "openwrt"
      repo:
        description: "openWRT 仓库的名字 (Name of openWRT repo)"
        type: string
        required: true
        default: "openwrt"
      branch:
        description: "openWRT 仓库的分支 (Branch of openWRT repo)"
        type: string
        required: true
        default: "v24.10.4"
      multithreading:
        description: "开启多线程编译 (Enable multithreading build)"
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: 🚀 编译 (Build)
    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
        
      - name: "Optimize Disk Space"
        uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
        with:
          operate_sudo: "True"
          general_include: ".+"
          general_exclude: |-
            ^GCC$
            ^G\+\+$
            Clang
            LLVM
          docker_include: ".+"
          docker_prune: "True"
          docker_clean: "True"
          apt_prune: "True"
          apt_clean: "True"
          homebrew_prune: "True"
          homebrew_clean: "True"
          npm_prune: "True"
          npm_clean: "True"
          os_swap: "True"
        
      - name: Freeing up disk space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 3072
          swap-size-mb: 1
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"
        
      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
        
      - name: 下载编译所需的依赖 (Install the software packages required for compilation)
        run: |
          sudo apt-get -y update
          sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk gettext git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev libssl-dev unzip wget python3 python3-dev python3-setuptools python3-pyelftools rsync subversion swig time xsltproc zlib1g-dev clang golang llvm
        
      - name: 克隆当前仓库 (Clone current repo)
        uses: actions/checkout@v4
        
      - name: 克隆 openWRT 仓库 (Clone openWRT repo)
        uses: actions/checkout@v4
        with:
          repository: "${{inputs.owner}}/${{inputs.repo}}"
          ref: ${{inputs.branch}}
          path: openWRT
        
      - name: 复制当前仓库的配置文件到 openWRT 仓库  (Copy current repo config to openWRT repo)
        run: cp -f add-openwrt-h68k.patch openWRT/
        
      - name: 应用并删除导入h68k设备支持的补丁add-openwrt-h68k.patch
        working-directory: openWRT
        run: |
          git apply add-openwrt-h68k.patch
          rm -rf add-openwrt-h68k.patch
        
      - name: 更新并下载软件包
        working-directory: openWRT
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
        
      - name: 更新默认配置文件
        working-directory: openWRT
        run: |
          cp diffconfig .config
          rm -rf diffconfig
          make defconfig
        
      - name: 下载DL库
        working-directory: openWRT
        run: |
          make download -j1 V=s
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
        
      - name: 多线程编译 openWRT (Build openWRT multithreading)
        if: ${{inputs.multithreading == true}}
        working-directory: openWRT
        run: make -j$(nproc) V=s
        
      - name: 单线程编译 openWRT (Build openWRT single thread)
        if: ${{inputs.multithreading == false}}
        working-directory: openWRT
        run: make -j1 V=s
        
      - name: 上传编译结果到 Artifact (Upload build result to Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: openWRT-build-result
          path: openWRT/bin/targets
